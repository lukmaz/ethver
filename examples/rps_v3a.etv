user "A";
user "B";

CONTRACT_BALANCE_MAX = 3;
CONTRACT_BALANCE_INIT = 0;
USER_BALANCE_MAX = 3;
USER0_BALANCE_INIT = 1;
USER1_BALANCE_INIT = 2;
MAX_VALUE = 1;
MAX_TIME = 2;

contract RPS {
  uint(3) num_players;
  uint(2) player_address0;
  uint(2) player_address1;
  uint(3) p0; // player who first joined the game
  uint(3) p1;
  uint(3) reward;

  bool committed0; // player who first joined the game
  bool committed1;
  bool has_revealed0;
  bool has_revealed1;

  function_with_value player_input(uint(3) choice) {
    if (num_players >= 2 || msg.value != 1 || time_elapsed > 0) {
      msg.sender.send(msg.value);
    }
    else if (num_players < 2 && msg.value == 1 && time_elapsed == 0) {
      reward = reward + msg.value;
      if (num_players == 0) {
        player_address0 = msg.sender;
        committed0 = true;
      }
      if (num_players == 1) {
        player_address1 = msg.sender;
        committed1 = true;
      }
      num_players = num_players + 1;
    }
  }

  function open() {
    if (player_address0 == msg.sender) {
      if (committed0 && !has_revealed0) {
        p0 = random(3);
        has_revealed0 = true;
      }
    }
    else if (player_address1 == msg.sender) {
      if (committed1 && !has_revealed1) {
        p1 = random(3);
        has_revealed1 = true;
      }
    }
  }

	function finalize() {
    if (time_elapsed > 0 && committed0 && !committed1) {
      player_address0.send(1);
    }
    else if (time_elapsed > 0 && !committed0 && committed1) {
      player_address1.send(1);
    }
    else if (has_revealed0 && has_revealed1) {
      if ((((3 + p0) - p1) % 3) == 1) {
        player_address0.send(reward);
      }
      if ((((3 + p0) - p1) % 3) == 2) {
        player_address1.send(reward);
      }
      if ((((3 + p0) - p1) % 3) == 0) {
        player_address0.send(reward/2);
        player_address1.send(reward/2);
      }
    }
  }
}

communication {

}

scenario A {
  bool endA;
  uint(3) choiceA;
  choiceA = random(3);
  player_input.sendTransaction(choiceA, {from: "A", value: 1});
  wait(num_players == 2, 1);
  if (num_players == 2) {
    open.sendTransaction({from: "A", value: 0});
    wait(has_revealed1, 2);
  }
  finalize.sendTransaction({from: "A", value: 0});
  endA = true;
}

scenario B {
  bool endB;
  uint(3) choiceB;
  choiceB = random(3);
  player_input.sendTransaction(choiceB, {from: "B", value: 1});
  wait(num_players == 2, 1);
  if (num_players == 2) {
    open.sendTransaction({from: "A", value: 0});
    wait(has_revealed0, 2);
  }
  finalize.sendTransaction({from: "B", value: 0});
  endB = true;
}
