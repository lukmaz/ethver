user "U";
user "M";

CONTRACT_BALANCE_MAX = 4;
CONTRACT_BALANCE_INIT = 2;
USER_BALANCE_MAX = 4;
USER0_BALANCE_INIT = 0;
USER1_BALANCE_INIT = 0;
MAX_VALUE = 1;
// MAX_VALUE = 5;

//TODO: MAX_PRODUCTS = 2; // 10

contract RPS {
  
  function get_payment() {
    if (contract_balance > 0) {
      if (msg.value == 0) {
        if (is_signed[msg.sender] && is_opened[msg.sender]) {
          if (randM[msg.sender] == randU[msg.sender]) {
            msg.sender.send(1);
          }
        }
      }
    }
  }
  
}

communication {
  random_uint(3) commit[2];
  bool is_committed[2];
  bool is_opened[2];
  bool is_signed[2];
  bool product_asked;
  random_uint(3) randM[2];
  random_uint(3) randU[2];
  uint(3) pom;

  // TODO: uint(MAX_PRODUCTS) products_sent;
  uint(2) products_sent;

  function open(uint(3) arg) {
    pom = arg;
    if (is_signed[msg.sender] && !is_opened[msg.sender]) {
      if (commit[msg.sender] == 3) {
        randM[msg.sender] = random(3);
      }
      
      else {
        randM[msg.sender] = commit[msg.sender];
      }
      
      is_opened[msg.sender] = true;
    }
  }

  function reset() {
    if (is_signed[msg.sender] && is_opened[msg.sender]) {
      commit[msg.sender] = 0;
      randU[msg.sender] = 0;
      randM[msg.sender] = 0;
      is_committed[msg.sender] = false;
      is_opened[msg.sender] = false;
      is_signed[msg.sender] = false;
      product_asked = false;
    }
  }
}

scenario U {
  uint(3) r0;
  bool endU;
  
  //ask_product.sendCommunication();
  wait(is_committed["M"]);
  if (is_committed["M"]) {
    r0 = random(3);
    //send_ticket.sendCommunication(1, r0);
    wait(!product_asked);

    if (!product_asked) {
      //ask_product.sendCommunication();
      wait(is_committed["M"]);
      if (is_committed["M"]) {
        r0 = random(3);
        //send_ticket.sendCommunication(1, r0);
      }
    }
  }
  endU = true;
}

scenario M {
  bool endM;
  endM = false;

  if (product_asked && contract_balance > 0) {
    //ask_payment.sendCommunication(r1);
    wait(is_signed["M"]);
    if (is_signed["M"]) {
      open.sendCommunication();
      //if (randU["M"] == randM["M"]) {
        //get_payment.sendTransaction({from: "M", value: 0});
      //}
      /*
      reset.sendCommunication();
      r1 = random_lazy(3);
      wait(product_asked);
      if (product_asked && contract_balance > 0) {
        //ask_payment.sendCommunication(r1);
        wait(is_signed["M"]);
        if (is_signed["M"]) {
          open.sendCommunication();
          if (randU["M"] == randM["M"]) {
            get_payment.sendTransaction({from: "M", value: 0});
          }
          reset.sendCommunication();
        }
      }
      */
    }
  }
  endM = true;
}

