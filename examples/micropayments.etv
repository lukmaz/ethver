contract RPS {
  user "A";
  user "B";

  uint(10) products_sent;

  random_uint(3) commit0;
  uint(3) randU0;
  uint(3) randM0;
  uint(2) is_committed0;
  uint(2) is_signed0;
  random_uint(3) commit1;
  uint(3) randU1;
  uint(3) randM1;
  uint(2) is_committed1;
  uint(2) is_signed1;

  function ask_payment(random_uint(3) commit) {
    if (msg.sender == "A") {
      commit0 = commit;
      is_committed0 = 1;
      is_signed0 = 0;
    }
    if (msg.sender == "B") {
      products_sent = products_sent + 1;
      commit1 = commit;
      is_committed1 = 1;
      is_signed1 = 0;
    }
  }

  function send_ticket(uint(2) merchant, uint(3) r) {
    if (msg.sender == "A") {
      if (merchant == 0) {
        if (is_committed0 == 1) {
          if (is_signed0 == 0) {
            randU0 = r;
            is_signed0 = 1;
          }
        }
      }
      else {
        if (is_committed1 == 1) {
          if (is_signed1 == 0) {
            randU1 = r;
            is_signed1 = 1;
          }
        }
      }
    }
  }

  function get_payment(uint(2) reveal) {
    if (msg.sender == "A") {
      if (reveal == 1) {
        if (is_signed0 == 1) {
          if (commit0 == 3) {  //special value
            randM0 = random(3);
          }
          if (commit0 != 3) {  //special value
            randM0 = commit0;
          }
          if (randM0 == randU0) {
            "A".send(1);
          }
          is_committed0 = 0;
          is_signed0 = 0;
        }
      }
    }
    if (msg.sender == "B") {
      if (reveal == 1) {
        if (is_signed1 == 1) {
          if (commit1 == 3) {  //special value
            randM1 = random(3);
          }
          if (commit1 != 3) {  //special value
            randM1 = commit1;
          }
          if (randM1 == randU1) {
            "B".send(1);
          }
          is_committed1 = 0;
          is_signed1 = 0;
        }
      }
    }
  }
}


scenario A {
  uint(3) r0;
  r0 = random(3);
  send_ticket.sendTransaction(1, r0, {from: "A", value: 0, wait: (is_committed1 == 1)});
}

scenario B {
  random_uint(3) r1;
  r1 = random_lazy(3);
  ask_payment.sendTransaction(r1, {from: "B", value: 0});
  get_payment.sendTransaction(1, {from: "B", value: 0, wait: (is_signed1 == 1)});
}

