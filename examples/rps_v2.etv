contract RPS {
  user "A";
  user "B";

//	rand_uint(4) commit0;
	uint(5) commit0;
//	rand_uint(4) commit1;
	uint(5) commit1;

	uint(4) input0;
	uint(4) input1;

	function send_commit(uint(5) commit) {
//	function send_commit(rand_uint(4) commit) {
		if (msg.value == 2) {
      if (msg.sender == "A") {
        commit0 = commit;
      }
      if (msg.sender == "B") {
        commit1 = commit;
      }
		}
	}

	function send_open(bool reveal) {
    if (msg.sender == "A") {
      if (reveal) {
        if (commit0 == 4) {  //special value
          //input0 = rand(3);
          input0 = 1;
        }
        if (commit0 != 4) {  //special value
          input0 = commit0;
        }
      }
    }
    if (msg.sender == "B") {
      if (reveal) {
        if (commit1 == 4) {  //special value
          //input1 = rand(3);
          input1 = 2;
        }
        if (commit1 != 4) {  //special value
          input1 = commit1;
        }
      }
    }
	}

	function finalize() {
    if (input0 != 0) {
      if (input1 != 0) {
        if ((((3 + input0) - input1)%3) == 1) {
          "A".send(2*2);
        }
        if ((((3 + input0) - input1)%3) == 2) {
          "B".send(2*2);
        }
        if ((((3 + input0) - input1)%3) == 0) {
          "A".send(2);
          "B".send(2);
        }
        input0 = 0;
        input1 = 0;
      }
    }
  }
}

scenario A {
//  random_uint(4) inputA;
  uint(5) inputA;
  inputA = 4;
//  inputA = random_lazy(3);  //sets special value
  send_commit.sendTransaction(inputA, {from: "A", value: 2});
  send_open.sendTransaction(true, {from: "A", value: 0});
  finalize.sendTransaction({from: "A", value: 0});
}

scenario B {
//  random_uint(4) inputB;
  uint(5) inputB;
  inputB = 4;
//  inputB = random_lazy(3);  //sets special value
  send_commit.sendTransaction(inputB, {from: "B", value: 2});
  send_open.sendTransaction(true, {from: "B", value: 0});
  finalize.sendTransaction({from: "B", value: 0});
}
