user "A";
user "B";

CONTRACT_BALANCE_MAX = 2;
CONTRACT_BALANCE_INIT = 0;
USER_BALANCE_MAX = 2;
USER0_BALANCE_INIT = 1;
USER1_BALANCE_INIT = 1;
MAX_VALUE = 1;
MAX_TIME = 2;

contract RPS {

	random_uint(3) commit0;
	random_uint(3) commit1;
  bool committed0;
  bool committed1;

	uint(3) input0;
	uint(3) input1;
  bool input0_set;
  bool input1_set;

  bool finalized;
  bool completed_honestly;

  function_with_value send_commit(random_uint(3) c) {
    if (finalized && msg.value > 0) {
      msg.sender.send(msg.value);
    }
    else if (msg.value == 1) {
      if ((msg.sender == "A") && (!committed0)) {
        commit0 = c;
        committed0 = true;
      }
      if ((msg.sender == "B") && (!committed1)){
        commit1 = c;
        committed1 = true;
      }
    }
  }

	function send_open() {
    if (msg.sender == "A") {
      if (committed0 && (!input0_set)) {
        if (commit0 == random_lazy(3)) {  //special value
          input0 = random(3);
          input0_set = true;
        }
        if (commit0 != random_lazy(3)) {  //special value
          input0 = commit0;
          input0_set = true;
        }
      }
    }
    if (msg.sender == "B") {
      if (committed1 && (!input1_set)) {
        if (commit1 == random_lazy(3)) {  //special value
          input1 = random(3);
          input1_set = true;
        }
        else {  //special value
          input1 = commit1;
          input1_set = true;
        }
      }
    }
	}

	function finalize() {
    if (!finalized && input0_set && input1_set) {
      if ((((3 + input0) - input1)%3) == 1) {
        "A".send(2*1);
      }
      if ((((3 + input0) - input1)%3) == 2) {
        "B".send(2*1);
      }
      if ((((3 + input0) - input1)%3) == 0) {
        "A".send(1);
        "B".send(1);
      }
      finalized = true;
      completed_honestly = true;
    }
  }

  function withdraw() {
    if (time_elapsed > 0 && !finalized) {
      if ((!input0_set) || (!input1_set)) {
        if (input0_set) {
          "A".send(2);
        }
        else {
          if (input1_set) {
            "B".send(2);
          }
          else {
            if (committed0) {
              "A".send(1);
            }
            if (committed1) {
              "B".send(1);
            }
          }
        }
      }
      finalized = true;
    }
  }
}

communication {

}

scenario A {
  bool endA;
  random_uint(3) inputA;
  inputA = random_lazy(3);  //sets special value
  send_commit.sendTransaction(inputA, {from: "A", value: 1});
  wait(committed1, 1);
  if (committed1) {
    send_open.sendTransaction({from: "A", value: 0});
    wait(input1_set, 1);
    if (input1_set) {
      finalize.sendTransaction({from: "A", value: 0});
    }
    else {
      withdraw.sendTransaction({from: "A", value: 0});
    }
  }
  else {
    withdraw.sendTransaction({from: "A", value: 0});
  }
  endA = true;
}

scenario B {
  bool endB;
  random_uint(3) inputB;
  inputB = random_lazy(3);  //sets special value
  send_commit.sendTransaction(inputB, {from: "B", value: 1});
  wait(committed0, 1);
  if (committed0) {
    send_open.sendTransaction({from: "B", value: 0});
    wait(input0_set, 1);
    if (input0_set) {
      finalize.sendTransaction({from: "B", value: 0});
    }
    else {
      withdraw.sendTransaction({from: "B", value: 0});
    }
  }
  else {
    withdraw.sendTransaction({from: "B", value: 0});
  }
  endB = true;
}
