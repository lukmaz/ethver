contract RPS {
  user "A";
  user "B";

	random_uint(3) commit0;
	random_uint(3) commit1;

	uint(3) input0;
	uint(3) input1;
  uint(2) input0_set;
  uint(2) input1_set;

	
  function_with_value send_commit(random_uint(3) commit) {
		if (msg.value == 2) {
      if (msg.sender == "A") {
        commit0 = commit;
      }
      if (msg.sender == "B") {
        commit1 = commit;
      }
		}
	}

	function send_open(uint(2) reveal) {
    if (msg.sender == "A") {
      if (reveal == 1) {
        if (commit0 == 3) {  //special value
          input0 = random(3);
          input0_set = 1;
        }
        if (commit0 != 3) {  //special value
          input0 = commit0;
          input0_set = 1;
        }
      }
    }
    if (msg.sender == "B") {
      if (reveal == 1) {
        if (commit1 == 3) {  //special value
          input1 = random(3);
          input1_set = 1;
        }
        if (commit1 != 3) {  //special value
          input1 = commit1;
          input1_set = 1;
        }
      }
    }
	}

	function finalize() {
    if (input0_set == 1) {
      if (input1_set == 1) {
        if ((((3 + input0) - input1)%3) == 1) {
          "A".send(2*2);
        }
        if ((((3 + input0) - input1)%3) == 2) {
          "B".send(2*2);
        }
        if ((((3 + input0) - input1)%3) == 0) {
          "A".send(2);
          "B".send(2);
        }
        input0_set = 0;
        input1_set = 0;
      }
    }
  }
}

scenario A {
  random_uint(3) inputA;
  inputA = random_lazy(3);  //sets special value
  send_commit.sendTransaction(inputA, {from: "A", value: 2});
  send_open.sendTransaction(1, {from: "A", value: 0});
  finalize.sendTransaction({from: "A", value: 0});
}

scenario B {
  random_uint(3) inputB;
  inputB = random_lazy(3);  //sets special value
  send_commit.sendTransaction(inputB, {from: "B", value: 2});
  send_open.sendTransaction(1, {from: "B", value: 0});
  finalize.sendTransaction({from: "B", value: 0});
}
